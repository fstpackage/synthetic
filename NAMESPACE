# Generated by roxygen2: do not edit by hand

S3method("&",delayed_expr)
S3method("*",delayed_expr)
S3method("+",delayed_expr)
S3method("-",delayed_expr)
S3method("/",delayed_expr)
S3method("==",delayed_expr)
S3method("|",delayed_expr)
S3method(collect,benchmark_definition)
S3method(print,benchmark_definition)
S3method(print,delayed_expr)
S3method(print,vectortemplate)
export("%>%")
export("&&.delayed_expr")
export("||.delayed_expr")
export(bench_columns)
export(bench_compression)
export(bench_rows)
export(bench_streamers)
export(bench_tables)
export(bench_threads)
export(collect)
export(delayed_eval)
export(delayed_expr)
export(delayed_to_str)
export(generate)
export(nr_of_rows)
export(streamer_arrow)
export(streamer_datatable)
export(streamer_feather)
export(streamer_fst)
export(streamer_parguet)
export(streamer_qs)
export(streamer_rds)
export(streamer_vroom)
export(synthetic_bench)
export(synthetic_table)
export(table_streamer)
export(template_integer)
export(template_logical)
export(template_numerical_normal)
export(template_numerical_uniform)
export(template_raw)
export(template_string_random)
export(vector_template)
importFrom(Rcpp,evalCpp)
importFrom(crayon,cyan)
importFrom(crayon,italic)
importFrom(crayon,red)
importFrom(data.table,":=")
importFrom(data.table,data.table)
importFrom(data.table,fread)
importFrom(data.table,fwrite)
importFrom(data.table,rbindlist)
importFrom(data.table,setDT)
importFrom(data.table,setDTthreads)
importFrom(dplyr,"%>%")
importFrom(dplyr,as_tibble)
importFrom(dplyr,collect)
importFrom(dplyr,mutate)
importFrom(dplyr,select)
importFrom(fst,read_fst)
importFrom(fst,threads_fst)
importFrom(fst,write_fst)
importFrom(microbenchmark,microbenchmark)
importFrom(progress,progress_bar)
importFrom(qs,qread)
importFrom(qs,qsave)
importFrom(rlang,enexpr)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stringi,stri_rand_lipsum)
importFrom(stringi,stri_rand_strings)
importFrom(utils,capture.output)
importFrom(utils,head)
importFrom(utils,object.size)
importFrom(utils,packageVersion)
importFrom(vroom,vroom)
importFrom(vroom,vroom_write)
useDynLib(synthetic, .registration = TRUE)
